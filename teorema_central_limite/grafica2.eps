%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Probability Distributions)
%%Version: 1 3
%%Creator: (PSCRIPT.DRV Versi\363n 4.0)
%%CreationDate: (D:20021205162915+01'00')
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 0 532 274
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
0 0 moveto 532 0 lineto 532 274 lineto 0 274 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 5.0 14
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
pathbbox
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
background length 0 gt { background aload pop setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
background length 0 gt { background aload pop setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
ext0 {
0 getrampcolor
r1 r2 eq c1x c2x eq and c1y c2y eq and
{
c1x c1y r1 0 360 arc fill
}
{
r1 r2 lt
{
/backsteps r1 rInc div floor def
/cx c1x xInc backsteps mul sub def
/cy c1y yInc backsteps mul sub def
/radius r1 rInc backsteps mul sub def
newpath
{
cx cy radius 0 360 arc
fill
radius r1 ge { exit} if
/radius radius rInc add def
/cx cx xInc add def
/cy cy yInc add def
} loop
}
{
/cx c1x def
/cy c1y def
/radius r1 def
newpath
{
cx cy radius 360 0 arcn
/cx cx xInc sub def
/cy cy yInc sub def
/radius radius rInc sub def
cx cy radius 0 360 arc
areaOfConcern ineofill not { exit } if
eofill
} loop
} ifelse
} ifelse
} if
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
r2 r1 le
{
r2 r1 eq c1x c2x eq and c1y c2y eq and
{
c1x c1y r1 0 360 arc
areaOfConcern uappend
eofill
}
{
{
cx cy radius 0 360 arc
areaOfConcern infill not { exit } if
fill
/radius radius rInc add def
/cx cx xInc add def
/cy cy yInc add def
} loop
} ifelse
}
{
{
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
areaOfConcern ineofill not { exit } if
eofill
} loop
} ifelse
} if
grestore
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[userdict /pdf_svglb currentglobal put true setglobal
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end

userdict /pdf_svglb get setglobal
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Times-Roman
[/N36/Times-Roman 1 TZ
%%IncludeResource Times-BoldItalic
[/N33/Times-BoldItalic 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 532 274 rectclip
/N20 [/CIEBasedABC  9 dict 
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop

false setSA
n
-13.08 -264.92 594.96 841.92 re
[/CIEBasedABC  9 dict 
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/E2 exch /ColorSpace defineRes

cs 1 1 1 sc
f
0 J
0 j
0.119995 w
10 M
[] 0 d
n
-7.32001 352.36 573.24 -382.68 re
q
eofill
Q
S
1 J
1 j
n
57.36 47.56 m
395.04 47.56 l
57.36 47.56 l
66.96 47.56 m
66.96 51.76 l
66.96 47.56 l
77.64 47.56 m
77.64 49.6 l
77.64 47.56 l
88.2 47.56 m
88.2 49.6 l
88.2 47.56 l
98.76 47.56 m
98.76 49.6 l
98.76 47.56 l
109.44 47.56 m
109.44 49.6 l
109.44 47.56 l
120.12 47.56 m
120.12 51.76 l
120.12 47.56 l
130.68 47.56 m
130.68 49.6 l
130.68 47.56 l
141.24 47.56 m
141.24 49.6 l
141.24 47.56 l
151.92 47.56 m
151.92 49.6 l
151.92 47.56 l
162.48 47.56 m
162.48 49.6 l
162.48 47.56 l
173.16 47.56 m
173.16 51.76 l
173.16 47.56 l
183.72 47.56 m
183.72 49.6 l
183.72 47.56 l
194.4 47.56 m
194.4 49.6 l
194.4 47.56 l
204.96 47.56 m
204.96 49.6 l
204.96 47.56 l
215.52 47.56 m
215.52 49.6 l
215.52 47.56 l
226.2 47.56 m
226.2 51.76 l
226.2 47.56 l
236.88 47.56 m
236.88 49.6 l
236.88 47.56 l
247.44 47.56 m
247.44 49.6 l
247.44 47.56 l
258 47.56 m
258 49.6 l
258 47.56 l
268.68 47.56 m
268.68 49.6 l
268.68 47.56 l
279.24 47.56 m
279.24 51.76 l
279.24 47.56 l
289.92 47.56 m
289.92 49.6 l
289.92 47.56 l
300.48 47.56 m
300.48 49.6 l
300.48 47.56 l
311.16 47.56 m
311.16 49.6 l
311.16 47.56 l
321.72 47.56 m
321.72 49.6 l
321.72 47.56 l
332.28 47.56 m
332.28 51.76 l
332.28 47.56 l
343.08 47.56 m
343.08 49.6 l
343.08 47.56 l
353.64 47.56 m
353.64 49.6 l
353.64 47.56 l
364.2 47.56 m
364.2 49.6 l
364.2 47.56 l
374.76 47.56 m
374.76 49.6 l
374.76 47.56 l
385.44 47.56 m
385.44 51.76 l
385.44 47.56 l
57.36 272.92 m
395.04 272.92 l
57.36 272.92 l
66.96 272.92 m
66.96 268.6 l
66.96 272.92 l
77.64 272.92 m
77.64 270.76 l
77.64 272.92 l
88.2 272.92 m
88.2 270.76 l
88.2 272.92 l
98.76 272.92 m
98.76 270.76 l
98.76 272.92 l
109.44 272.92 m
109.44 270.76 l
109.44 272.92 l
120.12 272.92 m
120.12 268.6 l
120.12 272.92 l
130.68 272.92 m
130.68 270.76 l
130.68 272.92 l
141.24 272.92 m
141.24 270.76 l
141.24 272.92 l
151.92 272.92 m
151.92 270.76 l
151.92 272.92 l
162.48 272.92 m
162.48 270.76 l
0 0 0 sc
S
n
162.48 270.76 m
162.48 272.92 l
173.16 272.92 m
173.16 268.6 l
173.16 272.92 l
183.72 272.92 m
183.72 270.76 l
183.72 272.92 l
194.4 272.92 m
194.4 270.76 l
194.4 272.92 l
204.96 272.92 m
204.96 270.76 l
204.96 272.92 l
215.52 272.92 m
215.52 270.76 l
215.52 272.92 l
226.2 272.92 m
226.2 268.6 l
226.2 272.92 l
236.88 272.92 m
236.88 270.76 l
236.88 272.92 l
247.44 272.92 m
247.44 270.76 l
247.44 272.92 l
258 272.92 m
258 270.76 l
258 272.92 l
268.68 272.92 m
268.68 270.76 l
268.68 272.92 l
279.24 272.92 m
279.24 268.6 l
279.24 272.92 l
289.92 272.92 m
289.92 270.76 l
289.92 272.92 l
300.48 272.92 m
300.48 270.76 l
300.48 272.92 l
311.16 272.92 m
311.16 270.76 l
311.16 272.92 l
321.72 272.92 m
321.72 270.76 l
321.72 272.92 l
332.28 272.92 m
332.28 268.6 l
332.28 272.92 l
343.08 272.92 m
343.08 270.76 l
343.08 272.92 l
353.64 272.92 m
353.64 270.76 l
353.64 272.92 l
364.2 272.92 m
364.2 270.76 l
364.2 272.92 l
374.76 272.92 m
374.76 270.76 l
374.76 272.92 l
385.44 272.92 m
385.44 268.6 l
385.44 272.92 l
57.36 47.56 m
57.36 272.92 l
57.36 47.56 l
57.36 53.92 m
63.72 53.92 l
57.36 53.92 l
57.36 64.6 m
60.6 64.6 l
57.36 64.6 l
57.36 75.16 m
60.6 75.16 l
57.36 75.16 l
57.36 85.84 m
60.6 85.84 l
57.36 85.84 l
57.36 96.4 m
60.6 96.4 l
57.36 96.4 l
57.36 107.08 m
63.72 107.08 l
57.36 107.08 l
57.36 117.76 m
60.6 117.76 l
57.36 117.76 l
57.36 128.32 m
60.6 128.32 l
57.36 128.32 l
57.36 139 m
60.6 139 l
57.36 139 l
57.36 149.56 m
60.6 149.56 l
57.36 149.56 l
57.36 160.24 m
63.72 160.24 l
57.36 160.24 l
57.36 170.8 m
60.6 170.8 l
57.36 170.8 l
57.36 181.48 m
60.6 181.48 l
57.36 181.48 l
57.36 192.04 m
60.6 192.04 l
57.36 192.04 l
57.36 202.72 m
60.6 202.72 l
57.36 202.72 l
57.36 213.4 m
63.72 213.4 l
57.36 213.4 l
57.36 223.96 m
60.6 223.96 l
57.36 223.96 l
57.36 234.64 m
60.6 234.64 l
57.36 234.64 l
57.36 245.2 m
60.6 245.2 l
57.36 245.2 l
57.36 255.88 m
60.6 255.88 l
57.36 255.88 l
S
n
57.36 266.44 m
63.72 266.44 l
57.36 266.44 l
395.04 47.56 m
395.04 272.92 l
395.04 47.56 l
395.04 53.92 m
388.68 53.92 l
395.04 53.92 l
395.04 64.6 m
391.8 64.6 l
395.04 64.6 l
395.04 75.16 m
391.8 75.16 l
395.04 75.16 l
395.04 85.84 m
391.8 85.84 l
395.04 85.84 l
395.04 96.4 m
391.8 96.4 l
395.04 96.4 l
395.04 107.08 m
388.68 107.08 l
395.04 107.08 l
395.04 117.76 m
391.8 117.76 l
395.04 117.76 l
395.04 128.32 m
391.8 128.32 l
395.04 128.32 l
395.04 139 m
391.8 139 l
395.04 139 l
395.04 149.56 m
391.8 149.56 l
395.04 149.56 l
395.04 160.24 m
388.68 160.24 l
395.04 160.24 l
395.04 170.8 m
391.8 170.8 l
395.04 170.8 l
395.04 181.48 m
391.8 181.48 l
395.04 181.48 l
S
n
395.04 192.04 m
391.8 192.04 l
395.04 192.04 l
395.04 202.72 m
391.8 202.72 l
395.04 202.72 l
395.04 213.4 m
388.68 213.4 l
395.04 213.4 l
395.04 223.96 m
391.8 223.96 l
395.04 223.96 l
395.04 234.64 m
391.8 234.64 l
395.04 234.64 l
395.04 245.2 m
391.8 245.2 l
395.04 245.2 l
395.04 255.88 m
391.8 255.88 l
395.04 255.88 l
395.04 266.44 m
388.68 266.44 l
395.04 266.44 l
66.96 53.92 m
106.8 53.92 l
108.36 54.04 l
114.84 54.04 l
116.28 54.16 l
119.52 54.16 l
121.2 54.28 l
122.64 54.28 l
124.32 54.4 l
125.88 54.4 l
127.44 54.52 l
129 54.52 l
130.68 54.64 l
132.24 54.88 l
133.8 55 l
135.48 55.12 l
137.04 55.36 l
138.72 55.48 l
140.16 55.72 l
141.84 55.96 l
146.52 57.04 l
148.2 57.4 l
151.32 58.36 l
153 58.96 l
154.56 59.56 l
156.24 60.16 l
159.36 61.72 l
160.92 62.56 l
164.04 64.48 l
165.72 65.56 l
170.4 69.16 l
173.76 72.04 l
175.2 73.6 l
176.88 75.16 l
178.44 76.84 l
181.56 80.44 l
183.24 82.36 l
184.8 84.28 l
187.92 88.36 l
189.6 90.4 l
191.28 92.56 l
192.72 94.6 l
194.4 96.76 l
199.08 103.24 l
200.76 105.28 l
202.32 107.32 l
205.44 111.16 l
207.12 112.96 l
210.24 116.32 l
211.92 117.76 l
215.04 120.4 l
216.6 121.48 l
218.28 122.44 l
219.84 123.28 l
221.4 123.88 l
222.96 124.24 l
224.64 124.48 l
226.2 124.6 l
227.76 124.48 l
229.44 124.24 l
231 123.88 l
232.56 123.28 l
234.12 122.44 l
235.8 121.48 l
237.36 120.4 l
240.48 117.76 l
242.16 116.32 l
245.28 112.96 l
246.84 111.16 l
248.52 109.24 l
250.08 107.32 l
251.64 105.28 l
253.32 103.24 l
258 96.76 l
259.68 94.6 l
261.24 92.56 l
262.8 90.4 l
264.36 88.36 l
266.04 86.32 l
267.6 84.28 l
269.16 82.36 l
270.84 80.44 l
273.96 76.84 l
275.52 75.16 l
277.2 73.6 l
278.76 72.04 l
281.88 69.16 l
283.56 67.96 l
286.68 65.56 l
288.36 64.48 l
291.48 62.56 l
293.04 61.72 l
294.72 60.88 l
296.28 60.16 l
299.4 58.96 l
301.08 58.36 l
304.2 57.4 l
305.88 57.04 l
310.56 55.96 l
312.24 55.72 l
313.8 55.48 l
315.36 55.36 l
316.92 55.12 l
318.6 55 l
S
n
318.6 55 m
320.16 54.88 l
321.72 54.64 l
323.28 54.52 l
324.96 54.52 l
326.52 54.4 l
328.08 54.4 l
329.76 54.28 l
331.32 54.28 l
332.88 54.16 l
336.12 54.16 l
337.68 54.04 l
344.04 54.04 l
345.6 53.92 l
360 53.92 l
S
n
360 53.92 m
385.44 53.92 l
S
n
66.96 53.92 m
68.64 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
66.96 53.92 m
68.64 53.92 l
0 0 0 sc
S
[] 0 d
n
68.64 53.92 m
70.08 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
68.64 53.92 m
70.08 53.92 l
0 0 0 sc
S
[] 0 d
n
70.08 53.92 m
71.76 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
70.08 53.92 m
71.76 53.92 l
0 0 0 sc
S
[] 0 d
n
71.76 53.92 m
73.32 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
71.76 53.92 m
73.32 53.92 l
0 0 0 sc
S
[] 0 d
n
73.32 53.92 m
74.88 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
73.32 53.92 m
74.88 53.92 l
0 0 0 sc
S
[] 0 d
n
74.88 53.92 m
76.56 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
74.88 53.92 m
76.56 53.92 l
0 0 0 sc
S
[] 0 d
n
76.56 53.92 m
78.12 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
76.56 53.92 m
78.12 53.92 l
0 0 0 sc
S
[] 0 d
n
78.12 53.92 m
79.8 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
78.12 53.92 m
79.8 53.92 l
0 0 0 sc
S
[] 0 d
n
79.8 53.92 m
81.24 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
79.8 53.92 m
81.24 53.92 l
0 0 0 sc
S
[] 0 d
n
81.24 53.92 m
82.92 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
81.24 53.92 m
82.92 53.92 l
0 0 0 sc
S
[] 0 d
n
82.92 53.92 m
84.48 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
82.92 53.92 m
84.48 53.92 l
0 0 0 sc
S
[] 0 d
n
84.48 53.92 m
86.16 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
84.48 53.92 m
86.16 53.92 l
0 0 0 sc
S
[] 0 d
n
86.16 53.92 m
87.6 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
86.16 53.92 m
87.6 53.92 l
0 0 0 sc
S
[] 0 d
n
87.6 53.92 m
89.28 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
87.6 53.92 m
89.28 53.92 l
0 0 0 sc
S
[] 0 d
n
89.28 53.92 m
90.84 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
89.28 53.92 m
90.84 53.92 l
0 0 0 sc
S
[] 0 d
n
90.84 53.92 m
92.4 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
90.84 53.92 m
92.4 53.92 l
0 0 0 sc
S
[] 0 d
n
92.4 53.92 m
93.96 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
92.4 53.92 m
93.96 53.92 l
0 0 0 sc
S
[] 0 d
n
93.96 53.92 m
95.64 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
93.96 53.92 m
95.64 53.92 l
0 0 0 sc
S
[] 0 d
n
95.64 53.92 m
97.32 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
95.64 53.92 m
97.32 53.92 l
0 0 0 sc
S
[] 0 d
n
97.32 53.92 m
98.76 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
97.32 53.92 m
98.76 53.92 l
0 0 0 sc
S
[] 0 d
n
98.76 53.92 m
100.44 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
98.76 53.92 m
100.44 53.92 l
0 0 0 sc
S
[] 0 d
n
100.44 53.92 m
102 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
100.44 53.92 m
102 53.92 l
0 0 0 sc
S
[] 0 d
n
102 53.92 m
103.68 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
102 53.92 m
103.68 53.92 l
0 0 0 sc
S
[] 0 d
n
103.68 53.92 m
105.12 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
103.68 53.92 m
105.12 53.92 l
0 0 0 sc
S
[] 0 d
n
105.12 53.92 m
106.8 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
105.12 53.92 m
106.8 53.92 l
0 0 0 sc
S
[] 0 d
n
106.8 53.92 m
108.36 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
106.8 53.92 m
108.36 53.92 l
0 0 0 sc
S
[] 0 d
n
108.36 53.92 m
109.92 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
108.36 53.92 m
109.92 53.92 l
0 0 0 sc
S
[] 0 d
n
109.92 53.92 m
111.48 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
109.92 53.92 m
111.48 53.92 l
0 0 0 sc
S
[] 0 d
n
111.48 53.92 m
113.16 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
111.48 53.92 m
113.16 53.92 l
0 0 0 sc
S
[] 0 d
n
113.16 53.92 m
114.84 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
113.16 53.92 m
114.84 53.92 l
0 0 0 sc
S
[] 0 d
n
114.84 53.92 m
116.28 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
114.84 53.92 m
116.28 53.92 l
0 0 0 sc
S
[] 0 d
n
116.28 53.92 m
117.96 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
116.28 53.92 m
117.96 53.92 l
0 0 0 sc
S
[] 0 d
n
117.96 53.92 m
119.52 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
117.96 53.92 m
119.52 53.92 l
0 0 0 sc
S
[] 0 d
n
119.52 53.92 m
121.2 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
119.52 53.92 m
121.2 53.92 l
0 0 0 sc
S
[] 0 d
n
121.2 53.92 m
122.64 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
121.2 53.92 m
122.64 53.92 l
0 0 0 sc
S
[] 0 d
n
122.64 53.92 m
124.32 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
122.64 53.92 m
124.32 53.92 l
0 0 0 sc
S
[] 0 d
n
124.32 53.92 m
125.88 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
124.32 53.92 m
125.88 53.92 l
0 0 0 sc
S
[] 0 d
n
125.88 53.92 m
127.44 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
125.88 53.92 m
127.44 53.92 l
0 0 0 sc
S
[] 0 d
n
127.44 53.92 m
129 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
127.44 53.92 m
129 53.92 l
0 0 0 sc
S
[] 0 d
n
129 53.92 m
130.68 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
129 53.92 m
130.68 53.92 l
0 0 0 sc
S
[] 0 d
n
130.68 53.92 m
132.24 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
130.68 53.92 m
132.24 53.92 l
0 0 0 sc
S
[] 0 d
n
132.24 53.92 m
133.8 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
132.24 53.92 m
133.8 53.92 l
0 0 0 sc
S
[] 0 d
n
133.8 53.92 m
135.48 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
133.8 53.92 m
135.48 53.92 l
0 0 0 sc
S
[] 0 d
n
135.48 53.92 m
137.04 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
135.48 53.92 m
137.04 53.92 l
0 0 0 sc
S
[] 0 d
n
137.04 53.92 m
138.72 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
137.04 53.92 m
138.72 53.92 l
0 0 0 sc
S
[] 0 d
n
138.72 53.92 m
140.16 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
138.72 53.92 m
140.16 53.92 l
0 0 0 sc
S
[] 0 d
n
140.16 53.92 m
141.84 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
140.16 53.92 m
141.84 53.92 l
0 0 0 sc
S
[] 0 d
n
141.84 53.92 m
143.4 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
141.84 53.92 m
143.4 53.92 l
0 0 0 sc
S
[] 0 d
n
143.4 53.92 m
144.96 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
143.4 53.92 m
144.96 53.92 l
0 0 0 sc
S
[] 0 d
n
144.96 53.92 m
146.52 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
144.96 53.92 m
146.52 53.92 l
0 0 0 sc
S
[] 0 d
n
146.52 53.92 m
148.2 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
146.52 53.92 m
148.2 53.92 l
0 0 0 sc
S
[] 0 d
n
148.2 53.92 m
149.76 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
148.2 53.92 m
149.76 53.92 l
0 0 0 sc
S
[] 0 d
n
149.76 53.92 m
151.32 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
149.76 53.92 m
151.32 53.92 l
0 0 0 sc
S
[] 0 d
n
151.32 53.92 m
153 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
151.32 53.92 m
153 53.92 l
0 0 0 sc
S
[] 0 d
n
153 53.92 m
154.56 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
153 53.92 m
154.56 53.92 l
0 0 0 sc
S
[] 0 d
n
154.56 53.92 m
156.24 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
154.56 53.92 m
156.24 53.92 l
0 0 0 sc
S
[] 0 d
n
156.24 53.92 m
157.68 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
156.24 53.92 m
157.68 53.92 l
0 0 0 sc
S
[] 0 d
n
157.68 53.92 m
159.36 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
157.68 53.92 m
159.36 53.92 l
0 0 0 sc
S
[] 0 d
n
159.36 53.92 m
160.92 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
159.36 53.92 m
160.92 53.92 l
0 0 0 sc
S
[] 0 d
n
160.92 53.92 m
162.48 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
160.92 53.92 m
162.48 53.92 l
0 0 0 sc
S
[] 0 d
n
162.48 53.92 m
164.04 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
162.48 53.92 m
164.04 53.92 l
0 0 0 sc
S
[] 0 d
n
164.04 53.92 m
165.72 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
164.04 53.92 m
165.72 53.92 l
0 0 0 sc
S
[] 0 d
n
165.72 53.92 m
167.28 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
165.72 53.92 m
167.28 53.92 l
0 0 0 sc
S
[] 0 d
n
167.28 53.92 m
168.84 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
167.28 53.92 m
168.84 53.92 l
0 0 0 sc
S
[] 0 d
n
168.84 53.92 m
170.4 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
168.84 53.92 m
170.4 53.92 l
0 0 0 sc
S
[] 0 d
n
170.4 53.92 m
172.08 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
170.4 53.92 m
172.08 53.92 l
0 0 0 sc
S
[] 0 d
n
172.08 53.92 m
173.76 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
172.08 53.92 m
173.76 53.92 l
0 0 0 sc
S
[] 0 d
n
173.76 53.92 m
175.2 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
173.76 53.92 m
175.2 53.92 l
0 0 0 sc
S
[] 0 d
n
175.2 53.92 m
176.88 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
175.2 53.92 m
176.88 53.92 l
0 0 0 sc
S
[] 0 d
n
176.88 53.92 m
178.44 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
176.88 53.92 m
178.44 53.92 l
0 0 0 sc
S
[] 0 d
n
178.44 53.92 m
180 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
178.44 53.92 m
180 53.92 l
0 0 0 sc
S
[] 0 d
n
180 53.92 m
181.56 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
180 53.92 m
181.56 53.92 l
0 0 0 sc
S
[] 0 d
n
181.56 53.92 m
183.24 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
181.56 53.92 m
183.24 53.92 l
0 0 0 sc
S
[] 0 d
n
183.24 53.92 m
184.8 54.04 l
1 1 1 sc
S
[9 6 ] 0 d
n
183.24 53.92 m
184.8 54.04 l
0 0 0 sc
S
[] 0 d
n
184.8 54.04 m
186.36 54.16 l
1 1 1 sc
S
[9 6 ] 0 d
n
184.8 54.04 m
186.36 54.16 l
0 0 0 sc
S
[] 0 d
n
186.36 54.16 m
187.92 54.28 l
1 1 1 sc
S
[9 6 ] 0 d
n
186.36 54.16 m
187.92 54.28 l
0 0 0 sc
S
[] 0 d
n
187.92 54.28 m
189.6 54.4 l
1 1 1 sc
S
[9 6 ] 0 d
n
187.92 54.28 m
189.6 54.4 l
0 0 0 sc
S
[] 0 d
n
189.6 54.4 m
191.28 54.88 l
1 1 1 sc
S
[9 6 ] 0 d
n
189.6 54.4 m
191.28 54.88 l
0 0 0 sc
S
[] 0 d
n
191.28 54.88 m
192.72 55.36 l
1 1 1 sc
S
[9 6 ] 0 d
n
191.28 54.88 m
192.72 55.36 l
0 0 0 sc
S
[] 0 d
n
192.72 55.36 m
194.4 56.32 l
1 1 1 sc
S
[9 6 ] 0 d
n
192.72 55.36 m
194.4 56.32 l
0 0 0 sc
S
[] 0 d
n
194.4 56.32 m
195.96 57.52 l
1 1 1 sc
S
[9 6 ] 0 d
n
194.4 56.32 m
195.96 57.52 l
0 0 0 sc
S
[] 0 d
n
195.96 57.52 m
197.52 59.44 l
1 1 1 sc
S
[9 6 ] 0 d
n
195.96 57.52 m
197.52 59.44 l
0 0 0 sc
S
[] 0 d
n
197.52 59.44 m
199.08 62.08 l
1 1 1 sc
S
[9 6 ] 0 d
n
197.52 59.44 m
199.08 62.08 l
0 0 0 sc
S
[] 0 d
n
199.08 62.08 m
200.76 65.8 l
1 1 1 sc
S
[9 6 ] 0 d
n
199.08 62.08 m
200.76 65.8 l
0 0 0 sc
S
[] 0 d
n
200.76 65.8 m
202.32 70.84 l
1 1 1 sc
S
[9 6 ] 0 d
n
200.76 65.8 m
202.32 70.84 l
0 0 0 sc
S
[] 0 d
n
202.32 70.84 m
203.88 77.32 l
1 1 1 sc
S
[9 6 ] 0 d
n
202.32 70.84 m
203.88 77.32 l
0 0 0 sc
S
[] 0 d
n
203.88 77.32 m
205.44 85.6 l
1 1 1 sc
S
[9 6 ] 0 d
n
203.88 77.32 m
205.44 85.6 l
0 0 0 sc
S
[] 0 d
n
205.44 85.6 m
207.12 95.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
205.44 85.6 m
207.12 95.92 l
0 0 0 sc
S
[] 0 d
n
207.12 95.92 m
208.68 108.28 l
1 1 1 sc
S
[9 6 ] 0 d
n
207.12 95.92 m
208.68 108.28 l
0 0 0 sc
S
[] 0 d
n
208.68 108.28 m
210.24 122.8 l
1 1 1 sc
S
[9 6 ] 0 d
n
208.68 108.28 m
210.24 122.8 l
0 0 0 sc
S
[] 0 d
n
210.24 122.8 m
211.92 139.12 l
1 1 1 sc
S
[9 6 ] 0 d
n
210.24 122.8 m
211.92 139.12 l
0 0 0 sc
S
[] 0 d
n
211.92 139.12 m
213.48 157.12 l
1 1 1 sc
S
[9 6 ] 0 d
n
211.92 139.12 m
213.48 157.12 l
0 0 0 sc
S
[] 0 d
n
213.48 157.12 m
215.04 176.08 l
1 1 1 sc
S
[9 6 ] 0 d
n
213.48 157.12 m
215.04 176.08 l
0 0 0 sc
S
[] 0 d
n
215.04 176.08 m
216.6 195.4 l
1 1 1 sc
S
[9 6 ] 0 d
n
215.04 176.08 m
216.6 195.4 l
0 0 0 sc
S
[] 0 d
n
216.6 195.4 m
218.28 214 l
1 1 1 sc
S
[9 6 ] 0 d
n
216.6 195.4 m
218.28 214 l
0 0 0 sc
S
[] 0 d
n
218.28 214 m
219.84 231.04 l
1 1 1 sc
S
[9 6 ] 0 d
n
218.28 214 m
219.84 231.04 l
0 0 0 sc
S
[] 0 d
n
219.84 231.04 m
221.4 245.56 l
1 1 1 sc
S
[9 6 ] 0 d
n
219.84 231.04 m
221.4 245.56 l
0 0 0 sc
S
[] 0 d
n
221.4 245.56 m
222.96 256.6 l
1 1 1 sc
S
[9 6 ] 0 d
n
221.4 245.56 m
222.96 256.6 l
0 0 0 sc
S
[] 0 d
n
222.96 256.6 m
224.64 263.56 l
1 1 1 sc
S
[9 6 ] 0 d
n
222.96 256.6 m
224.64 263.56 l
0 0 0 sc
S
[] 0 d
n
224.64 263.56 m
226.2 265.96 l
1 1 1 sc
S
[9 6 ] 0 d
n
224.64 263.56 m
226.2 265.96 l
0 0 0 sc
S
[] 0 d
n
226.2 265.96 m
227.76 263.56 l
1 1 1 sc
S
[9 6 ] 0 d
n
226.2 265.96 m
227.76 263.56 l
0 0 0 sc
S
[] 0 d
n
227.76 263.56 m
229.44 256.6 l
1 1 1 sc
S
[9 6 ] 0 d
n
227.76 263.56 m
229.44 256.6 l
0 0 0 sc
S
[] 0 d
n
229.44 256.6 m
231 245.56 l
1 1 1 sc
S
[9 6 ] 0 d
n
229.44 256.6 m
231 245.56 l
0 0 0 sc
S
[] 0 d
n
231 245.56 m
232.56 231.04 l
1 1 1 sc
S
[9 6 ] 0 d
n
231 245.56 m
232.56 231.04 l
0 0 0 sc
S
[] 0 d
n
232.56 231.04 m
234.12 214 l
1 1 1 sc
S
[9 6 ] 0 d
n
232.56 231.04 m
234.12 214 l
0 0 0 sc
S
[] 0 d
n
234.12 214 m
235.8 195.4 l
1 1 1 sc
S
[9 6 ] 0 d
n
234.12 214 m
235.8 195.4 l
0 0 0 sc
S
[] 0 d
n
235.8 195.4 m
237.36 176.08 l
1 1 1 sc
S
[9 6 ] 0 d
n
235.8 195.4 m
237.36 176.08 l
0 0 0 sc
S
[] 0 d
n
237.36 176.08 m
238.92 157.12 l
1 1 1 sc
S
[9 6 ] 0 d
n
237.36 176.08 m
238.92 157.12 l
0 0 0 sc
S
[] 0 d
n
238.92 157.12 m
240.48 139.12 l
1 1 1 sc
S
[9 6 ] 0 d
n
238.92 157.12 m
240.48 139.12 l
0 0 0 sc
S
[] 0 d
n
240.48 139.12 m
242.16 122.8 l
1 1 1 sc
S
[9 6 ] 0 d
n
240.48 139.12 m
242.16 122.8 l
0 0 0 sc
S
[] 0 d
n
242.16 122.8 m
243.72 108.28 l
1 1 1 sc
S
[9 6 ] 0 d
n
242.16 122.8 m
243.72 108.28 l
0 0 0 sc
S
[] 0 d
n
243.72 108.28 m
245.28 95.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
243.72 108.28 m
245.28 95.92 l
0 0 0 sc
S
[] 0 d
n
245.28 95.92 m
246.84 85.6 l
1 1 1 sc
S
[9 6 ] 0 d
n
245.28 95.92 m
246.84 85.6 l
0 0 0 sc
S
[] 0 d
n
246.84 85.6 m
248.52 77.32 l
1 1 1 sc
S
[9 6 ] 0 d
n
246.84 85.6 m
248.52 77.32 l
0 0 0 sc
S
[] 0 d
n
248.52 77.32 m
250.08 70.84 l
1 1 1 sc
S
[9 6 ] 0 d
n
248.52 77.32 m
250.08 70.84 l
0 0 0 sc
S
[] 0 d
n
250.08 70.84 m
251.64 65.8 l
1 1 1 sc
S
[9 6 ] 0 d
n
250.08 70.84 m
251.64 65.8 l
0 0 0 sc
S
[] 0 d
n
251.64 65.8 m
253.32 62.08 l
1 1 1 sc
S
[9 6 ] 0 d
n
251.64 65.8 m
253.32 62.08 l
0 0 0 sc
S
[] 0 d
n
253.32 62.08 m
254.88 59.44 l
1 1 1 sc
S
[9 6 ] 0 d
n
253.32 62.08 m
254.88 59.44 l
0 0 0 sc
S
[] 0 d
n
254.88 59.44 m
256.44 57.52 l
1 1 1 sc
S
[9 6 ] 0 d
n
254.88 59.44 m
256.44 57.52 l
0 0 0 sc
S
[] 0 d
n
256.44 57.52 m
258 56.32 l
1 1 1 sc
S
[9 6 ] 0 d
n
256.44 57.52 m
258 56.32 l
0 0 0 sc
S
[] 0 d
n
258 56.32 m
259.68 55.36 l
1 1 1 sc
S
[9 6 ] 0 d
n
258 56.32 m
259.68 55.36 l
0 0 0 sc
S
[] 0 d
n
259.68 55.36 m
261.24 54.88 l
1 1 1 sc
S
[9 6 ] 0 d
n
259.68 55.36 m
261.24 54.88 l
0 0 0 sc
S
[] 0 d
n
261.24 54.88 m
262.8 54.4 l
1 1 1 sc
S
[9 6 ] 0 d
n
261.24 54.88 m
262.8 54.4 l
0 0 0 sc
S
[] 0 d
n
262.8 54.4 m
264.36 54.28 l
1 1 1 sc
S
[9 6 ] 0 d
n
262.8 54.4 m
264.36 54.28 l
0 0 0 sc
S
[] 0 d
n
264.36 54.28 m
266.04 54.16 l
1 1 1 sc
S
[9 6 ] 0 d
n
264.36 54.28 m
266.04 54.16 l
0 0 0 sc
S
[] 0 d
n
266.04 54.16 m
267.6 54.04 l
1 1 1 sc
S
[9 6 ] 0 d
n
266.04 54.16 m
267.6 54.04 l
0 0 0 sc
S
[] 0 d
n
267.6 54.04 m
269.16 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
267.6 54.04 m
269.16 53.92 l
0 0 0 sc
S
[] 0 d
n
269.16 53.92 m
270.84 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
269.16 53.92 m
270.84 53.92 l
0 0 0 sc
S
[] 0 d
n
270.84 53.92 m
272.4 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
270.84 53.92 m
272.4 53.92 l
0 0 0 sc
S
[] 0 d
n
272.4 53.92 m
273.96 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
272.4 53.92 m
273.96 53.92 l
0 0 0 sc
S
[] 0 d
n
273.96 53.92 m
275.52 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
273.96 53.92 m
275.52 53.92 l
0 0 0 sc
S
[] 0 d
n
275.52 53.92 m
277.2 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
275.52 53.92 m
277.2 53.92 l
0 0 0 sc
S
[] 0 d
n
277.2 53.92 m
278.76 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
277.2 53.92 m
278.76 53.92 l
0 0 0 sc
S
[] 0 d
n
278.76 53.92 m
280.32 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
278.76 53.92 m
280.32 53.92 l
0 0 0 sc
S
[] 0 d
n
280.32 53.92 m
281.88 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
280.32 53.92 m
281.88 53.92 l
0 0 0 sc
S
[] 0 d
n
281.88 53.92 m
283.56 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
281.88 53.92 m
283.56 53.92 l
0 0 0 sc
S
[] 0 d
n
283.56 53.92 m
285.12 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
283.56 53.92 m
285.12 53.92 l
0 0 0 sc
S
[] 0 d
n
285.12 53.92 m
286.68 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
285.12 53.92 m
286.68 53.92 l
0 0 0 sc
S
[] 0 d
n
286.68 53.92 m
288.36 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
286.68 53.92 m
288.36 53.92 l
0 0 0 sc
S
[] 0 d
n
288.36 53.92 m
289.92 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
288.36 53.92 m
289.92 53.92 l
0 0 0 sc
S
[] 0 d
n
289.92 53.92 m
291.48 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
289.92 53.92 m
291.48 53.92 l
0 0 0 sc
S
[] 0 d
n
291.48 53.92 m
293.04 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
291.48 53.92 m
293.04 53.92 l
0 0 0 sc
S
[] 0 d
n
293.04 53.92 m
294.72 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
293.04 53.92 m
294.72 53.92 l
0 0 0 sc
S
[] 0 d
n
294.72 53.92 m
296.28 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
294.72 53.92 m
296.28 53.92 l
0 0 0 sc
S
[] 0 d
n
296.28 53.92 m
297.84 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
296.28 53.92 m
297.84 53.92 l
0 0 0 sc
S
[] 0 d
n
297.84 53.92 m
299.4 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
297.84 53.92 m
299.4 53.92 l
0 0 0 sc
S
[] 0 d
n
299.4 53.92 m
301.08 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
299.4 53.92 m
301.08 53.92 l
0 0 0 sc
S
[] 0 d
n
301.08 53.92 m
302.64 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
301.08 53.92 m
302.64 53.92 l
0 0 0 sc
S
[] 0 d
n
302.64 53.92 m
304.2 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
302.64 53.92 m
304.2 53.92 l
0 0 0 sc
S
[] 0 d
n
304.2 53.92 m
305.88 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
304.2 53.92 m
305.88 53.92 l
0 0 0 sc
S
[] 0 d
n
305.88 53.92 m
307.44 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
305.88 53.92 m
307.44 53.92 l
0 0 0 sc
S
[] 0 d
n
307.44 53.92 m
309 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
307.44 53.92 m
309 53.92 l
0 0 0 sc
S
[] 0 d
n
309 53.92 m
310.56 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
309 53.92 m
310.56 53.92 l
0 0 0 sc
S
[] 0 d
n
310.56 53.92 m
312.24 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
310.56 53.92 m
312.24 53.92 l
0 0 0 sc
S
[] 0 d
n
312.24 53.92 m
313.8 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
312.24 53.92 m
313.8 53.92 l
0 0 0 sc
S
[] 0 d
n
313.8 53.92 m
315.36 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
313.8 53.92 m
315.36 53.92 l
0 0 0 sc
S
[] 0 d
n
315.36 53.92 m
316.92 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
315.36 53.92 m
316.92 53.92 l
0 0 0 sc
S
[] 0 d
n
316.92 53.92 m
318.6 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
316.92 53.92 m
318.6 53.92 l
0 0 0 sc
S
[] 0 d
n
318.6 53.92 m
320.16 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
318.6 53.92 m
320.16 53.92 l
0 0 0 sc
S
[] 0 d
n
320.16 53.92 m
321.72 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
320.16 53.92 m
321.72 53.92 l
0 0 0 sc
S
[] 0 d
n
321.72 53.92 m
323.28 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
321.72 53.92 m
323.28 53.92 l
0 0 0 sc
S
[] 0 d
n
323.28 53.92 m
324.96 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
323.28 53.92 m
324.96 53.92 l
0 0 0 sc
S
[] 0 d
n
324.96 53.92 m
326.52 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
324.96 53.92 m
326.52 53.92 l
0 0 0 sc
S
[] 0 d
n
326.52 53.92 m
328.08 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
326.52 53.92 m
328.08 53.92 l
0 0 0 sc
S
[] 0 d
n
328.08 53.92 m
329.76 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
328.08 53.92 m
329.76 53.92 l
0 0 0 sc
S
[] 0 d
n
329.76 53.92 m
331.32 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
329.76 53.92 m
331.32 53.92 l
0 0 0 sc
S
[] 0 d
n
331.32 53.92 m
332.88 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
331.32 53.92 m
332.88 53.92 l
0 0 0 sc
S
[] 0 d
n
332.88 53.92 m
334.44 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
332.88 53.92 m
334.44 53.92 l
0 0 0 sc
S
[] 0 d
n
334.44 53.92 m
336.12 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
334.44 53.92 m
336.12 53.92 l
0 0 0 sc
S
[] 0 d
n
336.12 53.92 m
337.68 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
336.12 53.92 m
337.68 53.92 l
0 0 0 sc
S
[] 0 d
n
337.68 53.92 m
339.24 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
337.68 53.92 m
339.24 53.92 l
0 0 0 sc
S
[] 0 d
n
339.24 53.92 m
340.8 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
339.24 53.92 m
340.8 53.92 l
0 0 0 sc
S
[] 0 d
n
340.8 53.92 m
342.48 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
340.8 53.92 m
342.48 53.92 l
0 0 0 sc
S
[] 0 d
n
342.48 53.92 m
344.04 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
342.48 53.92 m
344.04 53.92 l
0 0 0 sc
S
[] 0 d
n
344.04 53.92 m
345.6 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
344.04 53.92 m
345.6 53.92 l
0 0 0 sc
S
[] 0 d
n
345.6 53.92 m
347.28 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
345.6 53.92 m
347.28 53.92 l
0 0 0 sc
S
[] 0 d
n
347.28 53.92 m
348.84 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
347.28 53.92 m
348.84 53.92 l
0 0 0 sc
S
[] 0 d
n
348.84 53.92 m
350.4 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
348.84 53.92 m
350.4 53.92 l
0 0 0 sc
S
[] 0 d
n
350.4 53.92 m
351.96 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
350.4 53.92 m
351.96 53.92 l
0 0 0 sc
S
[] 0 d
n
351.96 53.92 m
353.64 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
351.96 53.92 m
353.64 53.92 l
0 0 0 sc
S
[] 0 d
n
353.64 53.92 m
355.2 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
353.64 53.92 m
355.2 53.92 l
0 0 0 sc
S
[] 0 d
n
355.2 53.92 m
356.76 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
355.2 53.92 m
356.76 53.92 l
0 0 0 sc
S
[] 0 d
n
356.76 53.92 m
358.32 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
356.76 53.92 m
358.32 53.92 l
0 0 0 sc
S
[] 0 d
n
358.32 53.92 m
360 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
358.32 53.92 m
360 53.92 l
0 0 0 sc
S
[] 0 d
n
360 53.92 m
361.44 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
360 53.92 m
361.44 53.92 l
0 0 0 sc
S
[] 0 d
n
361.44 53.92 m
363.12 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
361.44 53.92 m
363.12 53.92 l
0 0 0 sc
S
[] 0 d
n
363.12 53.92 m
364.8 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
363.12 53.92 m
364.8 53.92 l
0 0 0 sc
S
[] 0 d
n
364.8 53.92 m
366.36 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
364.8 53.92 m
366.36 53.92 l
0 0 0 sc
S
[] 0 d
n
366.36 53.92 m
367.92 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
366.36 53.92 m
367.92 53.92 l
0 0 0 sc
S
[] 0 d
n
367.92 53.92 m
369.48 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
367.92 53.92 m
369.48 53.92 l
0 0 0 sc
S
[] 0 d
n
369.48 53.92 m
371.16 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
369.48 53.92 m
371.16 53.92 l
0 0 0 sc
S
[] 0 d
n
371.16 53.92 m
372.72 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
371.16 53.92 m
372.72 53.92 l
0 0 0 sc
S
[] 0 d
n
372.72 53.92 m
374.28 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
372.72 53.92 m
374.28 53.92 l
0 0 0 sc
S
[] 0 d
n
374.28 53.92 m
375.84 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
374.28 53.92 m
375.84 53.92 l
0 0 0 sc
S
[] 0 d
n
375.84 53.92 m
377.52 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
375.84 53.92 m
377.52 53.92 l
0 0 0 sc
S
[] 0 d
n
377.52 53.92 m
378.96 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
377.52 53.92 m
378.96 53.92 l
0 0 0 sc
S
[] 0 d
n
378.96 53.92 m
380.64 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
378.96 53.92 m
380.64 53.92 l
0 0 0 sc
S
[] 0 d
n
380.64 53.92 m
382.32 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
380.64 53.92 m
382.32 53.92 l
0 0 0 sc
S
[] 0 d
n
382.32 53.92 m
383.88 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
382.32 53.92 m
383.88 53.92 l
0 0 0 sc
S
[] 0 d
n
383.88 53.92 m
385.44 53.92 l
1 1 1 sc
S
[9 6 ] 0 d
n
383.88 53.92 m
385.44 53.92 l
0 0 0 sc
S
[] 0 d
n
407.76 245.2 m
426.84 245.2 l
S
n
407.76 223.96 m
426.84 223.96 l
1 1 1 sc
S
[9 6 ] 0 d
n
407.76 223.96 m
426.84 223.96 l
0 0 0 sc
S
q
n
414.72 252.76 117.33 -15 re
W
n
433.2 240.642 m
/N33 13.2 Tf
(X1=...=X9~N\(4,3\))
[8.8756 6.6713 7.59519 3.3713 3.3713 3.3713 7.59519 8.8756 6.6713 7.59519 9.6015 
4.4668 6.6713 3.3713 6.6713 4.4668 ] pdfxs
Q
q
n
414.72 231.52 117.33 -15 re
W
n
433.2 219.402 m
/N33 13.2 Tf
(Med9~N\(4,1\))
[11.8165 5.94238 6.68177 6.68177 7.60567 9.61197 4.47728 6.68177 3.38177 6.68177 4.47728 
] pdfxs
Q
q
n
203.28 14.44 55.44 -14.44 re
W
n
221.76 2.3224 m
/N33 13.2 Tf
(X) show
Q
q
n
0.0299988 274.02 532.02 -274.02 re
W
n
11.0376 150.28 m
/N33 [0 13.2 -13.2 0 0 0] Tf
(f\(x\))
[4.45895 4.45895 6.66344 4.45895 ] pdfys
Q
q
n
42.72 25.96 77.4 15 re
W
n
58.2 29.2001 m
/N36 13.44 Tf
(-11)
[4.38396 6.62854 6.62854 ] pdfxs
Q
q
n
99.12 25.96 61.92 15 re
W
n
114.6 29.2001 m
/N36 13.44 Tf
(-6)
[4.39749 6.64207 ] pdfxs
Q
q
n
152.16 25.96 61.92 15 re
W
n
167.64 29.2001 m
/N36 13.44 Tf
(-1)
[4.39749 6.64207 ] pdfxs
Q
q
n
207.48 25.96 46.44 15 re
W
n
222.96 29.2001 m
/N36 13.44 Tf
(4) show
Q
q
n
260.52 25.96 46.44 15 re
W
n
276 29.2001 m
/N36 13.44 Tf
(9) show
Q
q
n
310.2 25.96 61.92 15 re
W
n
325.68 29.2001 m
/N36 13.44 Tf
(14)
[6.60044 6.60044 ] pdfxs
Q
q
n
363.36 25.96 61.92 15 re
W
n
378.84 29.2001 m
/N36 13.44 Tf
(19)
[6.60044 6.60044 ] pdfxs
Q
q
n
29.04 46.48 46.44 15 re
W
n
44.52 49.7201 m
/N36 13.44 Tf
(0) show
Q
q
n
19.08 99.64 77.4 15 re
W
n
34.56 102.88 m
/N36 13.44 Tf
(0,1)
[6.63941 3.2794 6.63941 ] pdfxs
Q
q
n
19.08 152.8 77.4 15 re
W
n
34.56 156.04 m
/N36 13.44 Tf
(0,2)
[6.63941 3.2794 6.63941 ] pdfxs
Q
q
n
19.08 205.96 77.4 15 re
W
n
34.56 209.2 m
/N36 13.44 Tf
(0,3)
[6.63941 3.2794 6.63941 ] pdfxs
Q
q
n
19.08 259 77.4 15 re
W
n
34.56 262.24 m
/N36 13.44 Tf
(0,4)
[6.63941 3.2794 6.63941 ] pdfxs
Q
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Times-BoldItalic
%%+ font Times-Roman
%%EOF
